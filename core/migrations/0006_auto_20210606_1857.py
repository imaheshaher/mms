# Generated by Django 3.1.7 on 2021-06-06 13:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_auto_20210606_0739'),
    ]

    operations = [
        migrations.CreateModel(
            name='Mess',
            fields=[
                ('id', models.CharField(default=uuid.uuid1, max_length=200, primary_key=True, serialize=False)),
                ('mess_name', models.CharField(blank=True, max_length=250, null=True)),
                ('is_veg', models.BooleanField(default=True)),
                ('is_nonveg', models.BooleanField(default=True)),
                ('is_mix', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='user',
            name='join_date',
            field=models.DateField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MessSubscription',
            fields=[
                ('id', models.CharField(default=uuid.uuid1, max_length=200, primary_key=True, serialize=False)),
                ('subscription_type', models.CharField(choices=[('oneday', 'oneday'), ('weekly', 'weekly'), ('monthly', 'monthly')], max_length=200)),
                ('price', models.PositiveIntegerField()),
                ('mess', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.mess')),
            ],
        ),
        migrations.AddField(
            model_name='mess',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.vendor'),
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.CharField(default=uuid.uuid1, max_length=200, primary_key=True, serialize=False)),
                ('menu_name', models.CharField(blank=True, max_length=120, null=True)),
                ('menu_type', models.CharField(choices=[('Breakfast', 'Breakfast'), ('Lunch', 'Lunch'), ('Dinner', 'Dinner')], max_length=200)),
                ('menu_date', models.DateField()),
                ('mess', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.mess')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerSubscription',
            fields=[
                ('id', models.CharField(default=uuid.uuid1, max_length=200, primary_key=True, serialize=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('sub_status', models.CharField(choices=[('approve', 'approve'), ('reject', 'reject'), ('pending', 'pending')], default='pending', max_length=250)),
                ('total_price', models.PositiveIntegerField()),
                ('mess', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.mess')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.messsubscription')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.CharField(blank=True, max_length=500, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
